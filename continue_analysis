#tests with output readable by latex
library(devtools)
library("xtable")
library(dplyr)
library(corncob)
library(Biostrings)
library(lessR)
library(vegan)
library(phyloseq)
library(ggplot2)
library(ape)
library(picante)
library(ggpubr)
library(readxl)
library(pairwiseAdonis)
library(compositions)
library(microbiome)
library(readxl)

e <- betadisper(clr_euc_all, clr_phylo_meta$fraction, type = c("median","centroid"))
ee <- permutest(e)
print(xtable(ee$tab, format.args = list(big.mark = " ", decimal.mark = ",")))
v <- betadisper(clr_euc_all, clr_phylo_meta$sample_type, type = c("median","centroid"))
m <- permutest(v)
print(xtable(m$tab, format.args = list(big.mark = " ", decimal.mark = ",")))
mm <- permutest(v, pairwise = TRUE)
mm
goo <- as.data.frame(mm$pairwise)
print(xtable(goo, format.args = list(big.mark = " ", decimal.mark = ",")))
boxplot(v)

im <- adonis2(clr_euc_all ~ fraction, data = clr_phylo_meta)
im
print(xtable(im, format.args = list(big.mark = " ", decimal.mark = ",")))

eek <- adonis2(clr_euc_all ~ sample_type, data = clr_phylo_meta)
eek
print(xtable(eek, format.args = list(big.mark = " ", decimal.mark = ",")))

int1 <- adonis2(clr_euc_all ~ fraction*sample_type, data = clr_phylo_meta)
int1
print(xtable(int1, format.args = list(big.mark = " ", decimal.mark = ",")))

l <- pairwise.adonis(clr_euc_all , factors = clr_phylo_meta$sample_type)
l
ly <- l
print(xtable(ly, format.args = list(big.mark = " ", decimal.mark = ",")))

#plot PCA and ordinate. RDA is equivalent to PCA
#PCA via phyloseq
OK <- ordinate(clr_phylo, "RDA", "euclidean")
OK
#Plot scree plot
plot_scree(OK) + geom_bar(stat="identity", fill = "blue") +
  labs(x = "\nAxis", y = "Proportion of Variance\n")
#Examine eigenvalues and % prop. variance explained
head(OK$CA$eig)   
sapply(OK$CA$eig[1:5], function(x) x / sum(OK$CA$eig)) 
#Scale axes and plot ordination
clr1 <- OK$CA$eig[1] / sum(OK$CA$eig)
clr2 <- OK$CA$eig[2] / sum(OK$CA$eig)


pl <- as.data.frame(scores(OK, display = "sites"))
pll <- as.data.frame(pl)
View(pll)

cbbPalette2 <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7") # sample_type
hanPalette3 <- c("chartreuse4", "goldenrod1", "deepskyblue4", "deepskyblue",  "thistle4")


gg.all <- plot_ordination(clr_phylo, OK, "samples", color="sample_type", shape = "fraction", axes = c(1, 2)) +
  coord_fixed(clr2 / clr1) +
  geom_point(color = "black", size=2.6) +  
  geom_point(size = 2, alpha = 0.95) +
  scale_color_manual(values = hanPalette3) +
  theme_classic() + labs(fill = "Type") +
  labs(title="All Samples") + 
  theme(legend.text =element_text(size=6)) +
  theme(legend.title = element_text(size=6)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) + theme(plot.title = element_text(hjust = 0.5))
gg.all
View(pruned_samples_phylo1@sam_data)

#Analyze FL samples
fl_phy <- pruned_samples_phylo1 %>% 
  phyloseq::subset_samples(fraction %in% "Supor 200") 
fl_phy
fl_phy2 <- fl_phy %>% 
  phyloseq::subset_samples(sample_type %in% c("Larvae Tank", "Treated Intake", "Raw Intake", "Algae", 'Waste')) 
fl_phy2
class(fl_phy2@sam_data$julian)


#Remove the ASVs with no presence
fl_phy3 <- prune_taxa(taxa_sums(fl_phy2) > 1, fl_phy2)
fl_phy3

#transform
fl_phylo <- microbiome::transform(fl_phy3, transform = "clr", target = "sample")
fl_phylo
fl_phylo_otu <- as.data.frame(fl_phylo@otu_table)
dim(fl_phylo_otu)
#View(fl_phylo_otu)
#get metadata table
meta <- as.matrix(fl_phylo@sam_data, stringsAsFactors=T)
meta <- as.data.frame(meta, stringsAsFactors=T)
meta$pairedReads <- as.numeric(as.character(meta$pairedReads))
meta$Reduced <- as.numeric(as.character(meta$Reduced))
meta$julian <- as.numeric(as.character(meta$julian))
dim(meta)
#View(meta)
#View(pruned_samples_meta)
sapply(meta, class)

#distance
t_fl_phylo_otu <- t(fl_phylo_otu)
euc_fl <- vegdist(t_fl_phylo_otu, method = "euclidean")
#tests
v <- betadisper(euc_fl, meta$sample_type, type = c("median","centroid"))
hey <- permutest(v, pairwise = TRUE)
hey
goo <- as.data.frame(hey$pairwise)
print(xtable(goo, format.args = list(big.mark = " ", decimal.mark = ",")))
print(xtable(hey$tab, format.args = list(big.mark = " ", decimal.mark = ",")))

#adonis
adonis2(euc_fl ~ sample_type, data = meta)
a2 <- adonis2(euc_fl ~ sample_type, data = meta)
class(a2)
a2
print(xtable(a2, format.args = list(big.mark = " ", decimal.mark = ",")))
pairwise.adonis(euc_fl , factors = meta$sample_type, p.adjust.m = "bonferroni")
a3 <- pairwise.adonis(euc_fl , factors = meta$sample_type)
a3
print(xtable(a3, format.args = list(big.mark = " ", decimal.mark = ",")))

#Now plot
#PCA via phyloseq
FLPCA <- ordinate(fl_phylo, "RDA", "euclidean")
FLPCA
#Plot scree plot
plot_scree(FLPCA) + geom_bar(stat="identity", fill = "blue") +
  labs(x = "\nAxis", y = "Proportion of Variance\n")
#Examine eigenvalues and % prop. variance explained
head(FLPCA$CA$eig)   
sapply(FLPCA$CA$eig[1:5], function(x) x / sum(FLPCA$CA$eig)) 
#Scale axes and plot ordination
clr1 <- FLPCA$CA$eig[1] / sum(FLPCA$CA$eig)
clr2 <- FLPCA$CA$eig[2] / sum(FLPCA$CA$eig)
pl <- as.data.frame(scores(FLPCA, display = "sites"))
pll <- as.data.frame(pl)
#View(pll)

hanPalette4 <- c( "chartreuse4" , "goldenrod1", "royalblue", "lightskyblue",  "thistle4")


p3 <- plot_ordination(fl_phylo, FLPCA, "samples", color="Type", axes = c(1, 2)) +
  coord_fixed(clr2 / clr1) +
  geom_point(color = "black", size=2.6) +  theme_classic()+
  geom_point(size = 2, alpha = 0.95) +
  scale_color_manual(values = hanPalette2) +
  labs(fill = "Day") +
  labs(title="Free-living fraction") + 
  theme(legend.text =element_text(size=6)) +
  theme(legend.title = element_text(size=6)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) + theme(plot.title = element_text(hjust = 0.5)) 
p3 
gg.fl <- p3
gg.all <- p9

### particle attached
pruned_samples_phylo1

han <- pruned_samples_phylo1 %>%
  phyloseq::subset_samples(fraction %in% c( "GFF"))
class(han)
han
pan <- han %>%
  phyloseq::subset_samples(Type %in% c( "Tank", "Intake", "Algae",
                                          "Waste"))
pan

#Remove the ASVs with no presence
pan1 <- prune_taxa(taxa_sums(pan) > 1, pan)
pan1

#now transforma and shit
paaw <- microbiome::transform(pan1, transform = "clr", target = "sample")
p_a <- as.data.frame(paaw@otu_table)
dim(p_a)
#View(paa.o)
#get metadata table
metal <- as.matrix(paaw@sam_data, stringsAsFactors=T)
metal <- as.data.frame(metal, stringsAsFactors=T)
metal$pairedReads <- as.numeric(as.character(metal$pairedReads))
metal$Reduced <- as.numeric(as.character(metal$Reduced))
metal$julian <- as.numeric(as.character(metal$julian))
dim(metal)
#View(metal)
#View(pruned_samples_meta)
sapply(metal, class)

#distance
paa.o.t <- t(p_a)
euc_pa <- vegdist(paa.o.t , method = "euclidean")
length(euc_pa)


#tests and plots pa
vy <- betadisper(euc_pa, metal$sample_type, type = c("median","centroid"))
vvy <- permutest(vy, pairwise = TRUE)
vvy
gov <- as.data.frame(vvy$pairwise)
dff <- data.frame(Distance_to_centroid=vy$distances,Group=vy$group)
print(xtable(gov, format.args = list(big.mark = " ", decimal.mark = ",")))
print(xtable(vvy$tab, format.args = list(big.mark = " ", decimal.mark = ",")))
View(dff)
p<- ggplot(data=dff,aes(x=Group,y=Distance_to_centroid,fill=Group))
p + geom_boxplot() + scale_fill_manual(values = hanPalette3) +
     theme(axis.text.x=element_text(angle = -90, hjust = 0,vjust=0.5)) +
 theme_classic() +  labs(y = "Distance to Centroid") + coord_flip() +geom_jitter(alpha = 0.5)
disp_pa <- p + geom_boxplot(outlier.alpha = 0) + scale_fill_manual(values = hanPalette3) +
  theme(axis.text.x=element_text(angle = -90, hjust = 0,vjust=0.5)) +
  theme_classic() +  labs(y = "Distance to Centroid", x = "Sample Location") + coord_flip() +geom_jitter(alpha = 0.5)
df <- data.frame(Distance_to_centroid=v$distances,Group=v$group)
groups <- v$group
fl_disp <- ggplot(data=df,aes(x=Group,y=Distance_to_centroid,fill=groups))
fl_dispw <- fl_disp  + geom_boxplot(outlier.alpha = 0) + scale_fill_manual(values = hanPalette3) +
  theme(axis.text.x=element_text(angle = -90, hjust = 0,vjust=0.5)) +
  theme_classic() +  labs(y = "Distance to Centroid",  x = "Sample Location") + coord_flip() +geom_jitter(alpha = 0.5)
disp_pa
fl_dispw #made the fl plot too
#now put the plots side by side
dispersions = ggarrange(fl_dispw,
                        disp_pa,
                    ncol = 2, nrow = 1,
                   common.legend = TRUE, legend = "right",
                   labels = c("A", "B", "C", "D", "E", "F"), font.label = list(size = 9) )
dispersions


#PCA via phyloseq
HI <- ordinate(paaw, "RDA", "euclidean")
HI
#Plot scree plot
plot_scree(HI) + geom_bar(stat="identity", fill = "blue") +
  labs(x = "\nAxis", y = "Proportion of Variance\n")
#Examine eigenvalues and % prop. variance explained
head(HI$CA$eig)   
sapply(HI$CA$eig[1:5], function(x) x / sum(HI$CA$eig)) 
#Scale axes and plot ordination
clr1 <- HI$CA$eig[1] / sum(HI$CA$eig)
clr2 <- HI$CA$eig[2] / sum(HI$CA$eig)
pl <- as.data.frame(scores(HI, display = "sites"))
pll <- as.data.frame(pl)
#View(pll)
p6 <- plot_ordination(paaw, HI, "samples", color="Type", axes = c(1, 2)) +
  coord_fixed(clr2 / clr1) +  
  geom_point(color = "black", size=2.6) +  
  geom_point(size = 2, alpha = 0.95) +
  scale_color_manual(values = hanPalette2) +
  theme_classic() + labs(fill = "Day") +
  labs(title="Particle-Attached fraction") + 
  theme(legend.text =element_text(size=6)) +
  theme(legend.title = element_text(size=6)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) + 
  theme(axis.text.x = element_text(size =6))  +
  theme(axis.text.y = element_text(size =6)) + theme(plot.title = element_text(hjust = 0.5)) 
p6 
gg.pa <- p6

### Days
#first PA
pruned_samples_phylo1
phy2 <- pruned_samples_phylo1 %>%
  phyloseq::subset_samples(sample_type %in% c( "Larvae Tank")) 
phy3 <- phy2 %>%
  phyloseq::subset_samples(fraction %in% c( "GFF"))
phy <- phy3%>%
  phyloseq::subset_samples(julian %in% c("28", "30", "32", "36", "38", "43", "45", "47" , "49", "53", "56"))
phy
#Remove the ASVs with no presence
phyw <- prune_taxa(taxa_sums(phy) > 1, phy)
phyw
#511 ASVs
#now transforma and shit
paa <-  microbiome::transform(phyw, transform = "clr", target = "sample")
p_a <- as.data.frame(paa@otu_table)
dim(p_a)

forjul <- paa
paa
OK <- ordinate(paa, "RDA", "euclidean")
OK
#Plot scree plot
plot_scree(OK) + geom_bar(stat="identity", fill = "blue") +
  labs(x = "\nAxis", y = "Proportion of Variance\n")
#Examine eigenvalues and % prop. variance explained
head(OK$CA$eig)   
sapply(OK$CA$eig[1:5], function(x) x / sum(OK$CA$eig)) 
#Scale axes and plot ordination
clr1 <- OK$CA$eig[1] / sum(OK$CA$eig)
clr2 <- OK$CA$eig[2] / sum(OK$CA$eig)
pl <- as.data.frame(scores(OK, display = "sites"))
pll <- as.data.frame(pl)

forjul@sam_data$julian <- as.numeric(forjul@sam_data$julian)
paa.jul <- plot_ordination(forjul, OK, "samples", color="julian", axes = c(1, 2)) +
  coord_fixed(clr2 / clr1) +
  geom_point(color = "black", size=2.6) +  
  geom_point(size = 2, alpha = 0.95) +
  scale_color_gradient(low = "red", high = "black")  +
  theme_classic() + labs(fill = "julian") +
  labs(title="PA Tanks") + 
  theme(legend.text =element_text(size=6)) +
  theme(legend.title = element_text(size=6)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) + theme(plot.title = element_text(hjust = 0.5))
paa.jul

#now FL
pruned_samples_phylo1
phy2 <- pruned_samples_phylo1 %>%
  phyloseq::subset_samples(sample_type %in% c( "Larvae Tank")) 
phy3 <- phy2 %>%
  phyloseq::subset_samples(fraction %in% c( "Supor 200"))
phy <- phy3%>%
  phyloseq::subset_samples(julian %in% c("28", "30", "32", "36", "38", "43", "45", "47" , "49", "53", "56"))
phy
#Remove the ASVs with no presence
phyw <- prune_taxa(taxa_sums(phy) > 1, phy)
phyw
#511 ASVs
#now transforma and shit
paa <-  microbiome::transform(phyw, transform = "clr", target = "sample")
p_a <- as.data.frame(paa@otu_table)
dim(p_a)

forjul <- paa
paa
OK <- ordinate(paa, "RDA", "euclidean")
OK
#Plot scree plot
plot_scree(OK) + geom_bar(stat="identity", fill = "blue") +
  labs(x = "\nAxis", y = "Proportion of Variance\n")
#Examine eigenvalues and % prop. variance explained
head(OK$CA$eig)   
sapply(OK$CA$eig[1:5], function(x) x / sum(OK$CA$eig)) 
#Scale axes and plot ordination
clr1 <- OK$CA$eig[1] / sum(OK$CA$eig)
clr2 <- OK$CA$eig[2] / sum(OK$CA$eig)
pl <- as.data.frame(scores(OK, display = "sites"))
pll <- as.data.frame(pl)

forjul@sam_data$julian <- as.numeric(forjul@sam_data$julian)
fl.jul <- plot_ordination(forjul, OK, "samples", color="julian", axes = c(1, 2)) +
  coord_fixed(clr2 / clr1) +
  geom_point(color = "black", size=2.6) +  
  geom_point(size = 2, alpha = 0.95) +
  scale_color_gradient(low = "red", high = "black")  +
  theme_classic() + labs(fill = "julian") +
  labs(title="FL") + 
  theme(legend.text =element_text(size=6)) +
  theme(legend.title = element_text(size=6)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) + theme(plot.title = element_text(hjust = 0.5))
  
fl.jul

pll$julian <- as.numeric(paa@sam_data$julian)
View(pll)
ggplot(data = pll, aes(y=PC1, x=julian)) + geom_point(color = "black") + geom_smooth(method = "loess")


figpca = ggarrange(gg.all,
                   gg.fl,
                   gg.pa,
                   fl.jul,paa.jul, ncol = 3, nrow = 2,
                   common.legend = FALSE, legend = "right",
                   labels = c("A", "B", "C", "D", "E", "F"), font.label = list(size = 7) )
figpca


### More
# Alpha diversity
# rarefy
#First, Rarefy everything
#get otu df from pruned samples phylo
OTUe = as(otu_table(pruned_samples_phylo), "matrix")
# transpose if necessary
if(taxa_are_rows(pruned_samples_phylo)){OTUe <- t(OTUe)}
# Coerce to data.frame
un = as.data.frame(OTUe)
#View(OTUee)
dim(OTUee)
#View(pruned_samples_phylo@tax_table)
TAXee = as(tax_table(pruned_samples_phylo), "matrix")
rarified_pruned_samples_phylo <- rarefy_even_depth(pruned_samples_phylo, sample.size = min(sample_sums(pruned_samples_phylo)),
                                                   replace = TRUE, trimOTUs = TRUE, verbose = TRUE,  rngseed=42)
rarified_pruned_samples_phylo
# Extract abundance matrix from the phyloseq object
OTU_pruned = as(otu_table(GP), "matrix")
# transpose if necessary
if(taxa_are_rows(GP)){OTU_pruned <- t(OTU_pruned)}
#coerce to data frame
OTU_pruned.df = as.data.frame(OTU_pruned)
# Faith's
pf_all <- pd(OTU_pruned.df, tree, include.root=FALSE)
View(pf_all)
View(pruned_samples_meta)
avs_per_sample <- rowSums(OTU_pruned.df)
head(avs_per_sample)
class(pf_all)

div <- alpha(rarified_pruned_samples_phylo, index= "all")
rare.meta <- meta(rarified_pruned_samples_phylo)
rare.meta$sam_name <- rownames(rare.meta )
div$sam_name <- rownames(rare.meta )
div.df<- merge(div,rare.meta, by = "sam_name")

div.df$Faith <- pf_all$PD
div.df$SR <-  pf_all$SR

#Returns a dataframe of the PD and species richness (SR)
div.df$Type <- factor(div.df$Type, levels = c( "Intake",  "Tank", "Algae","Waste"))
div.df$fraction <- factor(div.df$fraction, levels = c( "Supor 200",  "GFF"))

pie_even <- ggboxplot(div.df, 
             x = "Type",  facet.by = "fraction",
             y = "evenness_pielou",
             fill = "Type", ylab = "Evenness",
             xlab = FALSE, palette =  c(    "blue3", "goldenrod1", "chartreuse4" , "thistle4"), legend = NULL ) +
  theme(plot.title = element_text(hjust = 0.5)) +
 theme( axis.text.x = element_blank())


faith1 <- ggboxplot(div.df, 
             x = "Type",  facet.by = "fraction",
             y = "Faith",
             fill = "Type", ylab = "Faith's Phylogenetic Diversity",
             xlab = FALSE, palette =  c( "blue3", "goldenrod1", "chartreuse4" , "thistle4"), legend = NULL ) +
  theme(plot.title = element_text(hjust = 0.5)) +
 theme( axis.text.x = element_blank())

faith1 
pie_even
ggarrange(faith1,pie_even , common.legend =  TRUE, legend = "right", ncol = 1, nrow = 2,
                   labels = c("A", "B", "C", "D", "E", "F"), font.label = list(size = 9) )

#stats for alpha diversity
sup1 <- div.df  %>% filter(fraction == "Supor 200")
gff1 <- div.df  %>% filter(fraction == "GFF")
#example of how to get a summary
group_by(sup1, Type) %>%
  dplyr::summarise(
    count = n(),
    mean = mean(Faith, na.rm = TRUE),
    sd = sd(Faith, na.rm = TRUE),
    median = median(Faith, na.rm = TRUE),
    IQR = IQR(Faith, na.rm = TRUE)
  )
 #test evenness
sup.pie <- kruskal.test(evenness_pielou ~ Type, data = sup1)
sup.pie
pw.sup.pie <- pairwise.wilcox.test(sup1$evenness_pielou, sup1$Type,
                                 p.adjust.method = "BH")
pw.sup.pie
sup.f <- kruskal.test(Faith ~ Type, data = sup1)
sup.f
pw.sup.f<- pairwise.wilcox.test(sup1$Faith, sup1$Type,
                                 p.adjust.method = "BH")
pw.sup.f

group_by(gff1, Type) %>%
  dplyr::summarise(
    count = n(),
    mean = mean(Faith, na.rm = TRUE),
    sd = sd(Faith, na.rm = TRUE),
    median = median(Faith, na.rm = TRUE),
    IQR = IQR(Faith, na.rm = TRUE)
  )
#test evenness
gff1.pie <- kruskal.test(evenness_pielou ~ Type, data = gff1)
gff1.pie
pw.sgff1.pie <- pairwise.wilcox.test(gff1$evenness_pielou, gff1$Type,
                                 p.adjust.method = "BH")
pw.gff1.pie
gff1.f <- kruskal.test(Faith ~ Type, data = gff1)
gff1.f
pw.gff1.f<- pairwise.wilcox.test(gff1$Faith, gff1$Type,
                                 p.adjust.method = "BH")
pw.gff1.f


#Next RA graphs
pruned_samples_phylo
physeq2 = filter_taxa(pruned_samples_phylo, function(x) mean(x) > 0.1, TRUE)
physeq2
physeq3 = transform_sample_counts(physeq2, function(x) x / sum(x) )
#interesting # stomach <- subset_samples(physeq3, Sample_type=="Stomach")
df <- psmelt(physeq3)
glom <- tax_glom(physeq3, taxrank = 'Family')
glom 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Family <- as.character(data$Family) #convert to character
p <- ggplot(subset(data, Abundance > 0.05), aes(x=Type, y=Abundance, fill=Family))
p + geom_bar(aes(), stat="identity", position="fill") + facet_grid("fraction")+
  scale_fill_manual(values = c("gray20",  "darkgrey", "darkorchid",  
                               "darkblue","lightskyblue3", "khaki2", "darkseagreen",
                               "darkgreen", "royalblue1" , "ivory4", 
                               "darkgoldenrod1",  "lightskyblue2",
                                 "palevioletred1", "midnightblue", "red4",
                               "yellow2", "royalblue4", "darksalmon", 
                                 "steelblue1", "rosybrown4", "lightskyblue",  "red1", 
                               "darkgoldenrod", "lightblue4", "peru", 
                                "deeppink4", "peachpuff3", 
                               "lightsalmon",    "aquamarine4", "steelblue",
                               "lightpink",  "darkolivegreen1", "goldenrod",
                               "navajowhite", 
                               "deeppink", "black")) +
  theme(legend.position="bottom")  +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic() +
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")
  
  ### now class
glom <- tax_glom(physeq3, taxrank = 'Class')
glom 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Class <- as.character(data$Class) #convert to character
p <- ggplot(subset(data, Abundance > 0.02), aes(x=Type, y=Abundance, fill=Class))
p + geom_bar(aes(), stat="identity", position="fill") + facet_grid("fraction")+
  scale_fill_manual(values = c("gray20", "goldenrod",  "lightpink", 
                               "black", "lightskyblue3", 
                               "darkgreen", "rosybrown4", "royalblue1" ,"darkorchid", "ivory4", 
                               "darkgoldenrod1",  "lightskyblue2",
                                 "midnightblue", "red4",
                               "yellow2", "royalblue4", "darksalmon", 
                                 "steelblue1", "lightskyblue",  "red1", 
                               "darkgoldenrod", "lightblue4", "peru", 
                                "deeppink4", "gold1", 
                               "lightsalmon",    "aquamarine4", "steelblue",
                                "darkolivegreen1")) +
  theme(legend.position="bottom")  +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic() +
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")

  ### now phylum
glom <- tax_glom(physeq3, taxrank = 'Phylum')
glom 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Phylum <- as.character(data$Phylum) #convert to character
p <- ggplot(subset(data, Abundance > 0.05), aes(x=Type, y=Abundance, fill=Phylum))
p + geom_bar(aes(), stat="identity", position="fill") + facet_grid("fraction")+
  scale_fill_manual(values = c(   "cadetblue4",   "bisque3", "midnightblue",
                           "steelblue",  "lightsalmon",  "gold1", 
                                 "aquamarine4", "aliceblue", "gray14",
                                "darkolivegreen1")) +
  theme(legend.position="bottom")  +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic() +
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")

  ### now order
glom <- tax_glom(physeq3, taxrank = 'Order')
glom 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Order <- as.character(data$Order) #convert to character
p <- ggplot(subset(data, Abundance > 0.05), aes(x=Type, y=Abundance, fill=Order))
p + geom_bar(aes(), stat="identity", position="fill") + facet_grid("fraction")+
  scale_fill_manual(values = c(  "darkgreen",  "bisque3", "midnightblue",
                           "steelblue", "darksalmon",    "gold1",  "royalblue4", "cadetblue4", 
                                 "steelblue1", "black", "chartreuse",  "navy", "yellow2", 
                                 "darkgoldenrod4", "gray14",
                                "darkolivegreen1", "magenta2",   "rosybrown4", "royalblue1" ,"darkorchid", "ivory4", 
                                "chocolate1", "indianred3", "blue",  "azure2", "red1" )) +
  theme(legend.position="bottom")  +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic() +
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")
  
  #now genus
glom <- tax_glom(physeq3, taxrank = 'Genus')
glom 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Genus <- as.character(data$Genus) #convert to character
p <- ggplot(subset(data, Abundance > 0.05), aes(x=Type, y=Abundance, fill=Genus))
p + geom_bar(aes(), stat="identity", position="fill") + facet_grid("fraction")+
  scale_fill_manual(values = c( "gray2" , "orange", "darkgreen",  "mediumblue",   "gray20" ,"bisque3", 
                                "midnightblue", "chartreuse4","steelblue1",
                                "steelblue", "orange2",  "darksalmon",    "gold1",  "royalblue4", "cadetblue4", 
                                "royalblue2", "gray14","azure4",  "mistyrose",
                                 "black", "chartreuse",    "navy", 
                                "darkgoldenrod4", 
                                "darkolivegreen1", "magenta2",   "rosybrown4", "royalblue1" ,"darkorchid", 
                                "chocolate1", "indianred3", "blue",  "red1" , "aquamarine4", "steelblue3",
                                "lightpink",  "darkolivegreen", "goldenrod2", "mediumturquoise", 
                                "navajowhite" , "palevioletred1",  "red4",
                                 "red2", "navajowhite4", 
                                  "lightslateblue", "blue2",   "lightpink2", "gray29" ) ) +
  theme(legend.position="bottom")  +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic() +
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")


#Core Microbes
pruned_samples_phylo1
intake <- pruned_samples_phylo1 %>%
  phyloseq::subset_samples(Type %in% c( "Intake")) 
intake
intakePA <- intake %>% 
  phyloseq::subset_samples(fraction %in% "Supor 200")
alg <- intakePA  %>% tax_glom("Genus")
alg
alg0 <- microbiome::transform(alg, "compositional")
alg0
algy <- core(alg0, detection = 0.1/100, prevalence = 75/100)
algy
rf <- refseq(algy)
writeXStringSet(rf, file = "tanksupor.fa", format = "fasta")

#import into command line and build a tree
# FastTreeMP -gtr -nt new > fl_tank2.tre
# reroot tree (script source)
# perl /local/cluster/mueller/scripts/Genomics/stat/reroot.pl -midpoint < fl_tank2.tre > fl_tank2.reroot.2.tre
# save locally
#import
fl.tank.tre <- read.tree(file = "fltank.tre")
#put into the phylo object
phy_tree(algy) <- fl.tank.tre
fl_tank_phy <- ggtree(algy) + 
  geom_tippoint(size=1) 
melt_simple_fl <- psmelt(algy)  %>% select(OTU, val=Abundance)
#View(melt_simple_fl)
fl_tank_phy

fl_tank_dens <- facet_plot(fl_tank_phy+xlim_tree(.65), panel="Abundance", data=melt_simple_fl, 
           geom_density_ridges, mapping = aes(x=val,group=label, 
                                   fill=Family), 
           color='grey80', lwd=.3) +
  scale_fill_manual(values = c( "slateblue", "forestgreen", "gold4", "gold2", 
    "peru", "orangered", "maroon3",
    "palevioletred", "yellow", "purple3", "dodgerblue",
    "skyblue3", "darkslategray3", "darkturquoise"))   +  
  geom_tiplab(aes ( label = Genus), size = 3) +
  theme(legend.text = element_text(size=7)) +theme(axis.text.x = element_text(vjust = 0)) 
  
  
  pruned_samples_phylo1
intake <- pruned_samples_phylo1 %>%
  phyloseq::subset_samples(Type %in% c( "Tank")) 
intake
intakePA <- intake %>% 
  phyloseq::subset_samples(fraction %in% "GFF")
alg <- intakePA  %>% tax_glom("Genus")
alg
alg0 <- microbiome::transform(alg, "compositional")
alg0
#View(as.data.frame(alg0@tax_table))
algp <- core(alg0, detection = 0.1/100, prevalence = 75/100)
algp
parf <- refseq(algp)
writeXStringSet(parf , file = "tankpa.fa", format = "fasta")

#import into command line and build a tree
# FastTreeMP -gtr -nt new > pa_tank2.tre
# reroot tree (script source)
# perl /local/cluster/mueller/scripts/Genomics/stat/reroot.pl -midpoint < pa_tank2.tre > pa_tank2.reroot.2.tre
# save locally
#import
pa.tank.tre <- read.tree(file = "patnks.tree")
#put into the phylo object
phy_tree(algp) <- pa.tank.tre
pa_tank_phy <- ggtree(algp) + 
  geom_tippoint(size=1) 
pa_tank_phy
melt_simple_pa <- psmelt(algp)  %>% select(OTU, val=Abundance)
#View(melt_simple_pa)
pa_tank_dens <- facet_plot(pa_tank_phy+xlim_tree(.65), panel="Abundance", data=melt_simple_pa, 
                           geom_density_ridges, mapping = aes(x=val,group=label, 
                                                              fill=Family), 
                           color='grey80', lwd=.3) +
  scale_fill_manual(values = c( "gold4", "burlywood2", 
                                "peru", "plum2" ,
                                "orangered", "palevioletred", 
                                "purple3", "dodgerblue",
                                "skyblue3", "darkslategray3", 
                                "darkturquoise"))   +  
  geom_tiplab(aes ( label = Genus), size = 3) +
  theme(legend.text = element_text(size=7)) +theme(axis.text.x = element_text(vjust = 0)) 
  
ggarrange(fl_tank_dens,
          pa_tank_dens, ncol = 1, nrow = 2,
                   common.legend = FALSE, legend = "right",
                   labels = c("A", "B"), 
          font.label = list(size = 9) , hjust = -0.2)

#corncob differential abundance 
freeliving_phylo <- fl_phy3
freeliving_phylo
freeliving_phylo2 <- freeliving_phylo %>% 
  phyloseq::subset_samples(Type %in% c("Tank", "Intake")) %>% tax_glom(taxrank = "Family")   
freeliving_phylo2
#remove rare taxa not seen more than 4 times in at least 10% of the samples
freeliving_phylo3 <- filter_taxa(freeliving_phylo2, function(x) sum(x > 4) > (0.1*length(x)), TRUE)
freeliving_phylo3
set.seed(100)
corncob1<- differentialTest(formula = ~Type,
                                 phi.formula = ~Type,
                                 formula_null= ~1,
                                 phi.formula_null = ~Type, #controlling for the effect of Site on dispersion
                                 test="Wald", boot=FALSE, 
                                 data=freeliving_phylo3,
                                 fdr_cutoff=0.05)
plot(corncob1)

#supor vs gff, tanks
all_phylo <- pruned_samples_phylo1
all_phylo2 <- all_phylo %>% 
  phyloseq::subset_samples(Type %in% c("Tank", "Intake"))   %>% 
       tax_glom(taxrank = "Family")   
all_phylo2
#remove rare taxa not seen more than 4 times in at least 10% of the samples
all_phylo3 <- filter_taxa(all_phylo2, function(x) sum(x > 4) > (0.1*length(x)), TRUE)
all_phylo3
set.seed(100)
corncob2<- differentialTest(formula = ~fraction,
                            phi.formula = ~fraction,
                            formula_null= ~1,
                            phi.formula_null = ~fraction, #controlling for the effect of Site on dispersion
                            test="Wald", boot=FALSE, 
                            data=all_phylo3,
                            fdr_cutoff=0.05)
plot(corncob2)


#### Abundances stacked bar chards

pruned_samples_phylo1
w <- pruned_samples_phylo %>%
  phyloseq::subset_samples(Type %in% c("Tank"))
w
physeq2 = filter_taxa(w, function(x) mean(x) > 0.0001, TRUE)
physeq2
physeq3 = transform_sample_counts(physeq2, function(x) x / sum(x) )
physeq3
df <- psmelt(physeq3)
glom <- tax_glom(physeq3, taxrank = 'Family')
glom # 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Family <- as.character(data$Family) #convert to character
data$julian <- as.numeric(data$julian)
data$julian <- as.character(data$julian)
#Then turn it back into a factor with the levels in the correct order
#data$julian <- factor(data$julian, levels=unique(data$julian))
View(data)
datat <- data
data <- data[order(data$julian),] 
#simple way to rename phyla with < 1% abundance
data$Family[data$Abundance < 0.005] <- "< 1% abund."
h <- ggplot(subset(data, Abundance > 0.01), 
            aes(x = reorder(GroupID,julian), y=Abundance, fill=Family))
h + geom_bar(aes(), stat="identity", position="fill") + facet_wrap("fraction", scales = "free")+
  scale_fill_manual(values = c("blue3",   "royalblue4", "turquoise", "steelblue1",
                               "gold",  "black", "darkgreen", 
                               "skyblue", "steelblue2", "sienna3",  "red1" ,
                               "darkorange1", "darkgrey","lightsalmon", "tan4",
                               "red","aliceblue" , "slateblue4", "steelblue4",
                                "deeppink4", "aquamarine3", "deeppink",
                               "goldenrod1","lightpink2", "darkgoldenrod1", "darkseagreen", "darkorchid",
                               "palevioletred1", "dodgerblue",  "plum3", "wheat3", 
                               "darkblue","yellow2", "lightskyblue", "lightblue4", "peru",
                               "aquamarine4",  "brown3", 
                               "khaki2", "plum", "skyblue4",
                               "goldenrod","lightpink",  "purple", "brown1", 
                               "khaki3", "palegreen1",  "tomato4",
                               "gold3",   "yellowgreen",
                               "ivory4", 
                               "white" 
                               )) +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic()+
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6, angle = 90)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")
  
  ## intake
  pruned_samples_phylo1
w <- pruned_samples_phylo %>%
  phyloseq::subset_samples(Type %in% c("Intake"))
w
physeq2 = filter_taxa(w, function(x) mean(x) > 0.0001, TRUE)
physeq2
physeq3 = transform_sample_counts(physeq2, function(x) x / sum(x) )
physeq3
df <- psmelt(physeq3)
glom <- tax_glom(physeq3, taxrank = 'Family')
glom # 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Family <- as.character(data$Family) #convert to character
data$julian <- as.numeric(data$julian)
#Then turn it back into a factor with the levels in the correct order
#data$julian <- factor(data$julian, levels=unique(data$julian))
View(data)
#datat <- data
data <- data[order(data$julian),] 
#simple way to rename phyla with < 1% abundance
data$Family[data$Abundance < 0.005] <- "< 1% abund."
h <- ggplot(subset(data, Abundance > 0.01), 
            aes(x = reorder(GroupID,julian), y=Abundance, fill=Family))
h + geom_bar(aes(), stat="identity", position="fill") + facet_wrap("fraction", scales = "free")+
  scale_fill_manual(values = c( "skyblue","lightsalmon", "slateblue1", "yellow4", 
                               "royalblue4", "turquoise", "steelblue1",
                               "darkseagreen", "darkorchid",
                               "gold",  "black", "snow4", "darkgreen", 
                               "blue3",  "sienna3","steelblue2",   "red1" ,
                               "darkorange1", "darkgrey","tan4",
                               "red", "wheat3", "purple3" , "slateblue4", 
                                "deeppink4", "aquamarine3", "deeppink","yellowgreen", 
                               "goldenrod1","peru","lightpink2", "darkgoldenrod1", 
                               "palevioletred1", "dodgerblue", "plum", "brown3",
                               "darkblue","yellow2", "lightskyblue", "lightblue4", 
                               "aquamarine4",   "steelblue4", 
                               "khaki2",  "skyblue4", "thistle3" , 
                               "goldenrod","lightpink", "brown1",  "purple", 
                               "khaki3", "palegreen1",  "tomato4",
                               "gold3",  
                               "ivory4",  "darksalmon"
                               )) +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic()+
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6, angle = 90)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")
  
 ## Algae
 pruned_samples_phylo1
w <- pruned_samples_phylo %>%
  phyloseq::subset_samples(Type %in% c("Algae"))
w
physeq2 = filter_taxa(w, function(x) mean(x) > 0.0001, TRUE)
physeq2
physeq3 = transform_sample_counts(physeq2, function(x) x / sum(x) )
physeq3
df <- psmelt(physeq3)
glom <- tax_glom(physeq3, taxrank = 'Family')
glom # 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Family <- as.character(data$Family) #convert to character
data$julian <- as.numeric(data$julian)
#Then turn it back into a factor with the levels in the correct order
#data$julian <- factor(data$julian, levels=unique(data$julian))
View(data)
#datat <- data
data <- data[order(data$julian),] 
#simple way to rename phyla with < 1% abundance
data$Family[data$Abundance < 0.005] <- "< 1% abund."
h <- ggplot(subset(data, Abundance > 0.01), 
            aes(x = reorder(GroupID,julian), y=Abundance, fill=Family))
h + geom_bar(aes(), stat="identity", position="fill") + facet_wrap("fraction", scales = "free")+
  scale_fill_manual(values = c( "peru","lightpink2", "darkgoldenrod1", 
                                "palevioletred1", "dodgerblue", "plum", "brown3",
                                "darkblue","yellow2", "lightskyblue", "lightblue4", 
                                "aquamarine4",   "steelblue4", 
                                "khaki2",  "skyblue4", "thistle3" , 
                                "goldenrod","lightpink", "brown1",  "purple", 
                                "khaki3", "palegreen1",  "tomato4",
                                "skyblue","lightsalmon", "slateblue1", "yellow4", 
                               "royalblue4", "turquoise", "steelblue1",
                               "darkseagreen", "darkorchid",
                               "gold",  "black", "snow4", "darkgreen", 
                               "blue3",  "sienna3","steelblue2",   "red1" ,
                               "darkorange1", "darkgrey","tan4",
                               "red", "wheat3", "purple3" , "slateblue4", 
                                "deeppink4", "aquamarine3", "deeppink","yellowgreen", 
                               "goldenrod1",
                               "gold3",  
                               "ivory4",  "darksalmon"
                               )) +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic()+
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6, angle = 90)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")
  
#waste

pruned_samples_phylo1
w <- pruned_samples_phylo %>%
  phyloseq::subset_samples(Type %in% c("Waste"))
w
physeq2 = filter_taxa(w, function(x) mean(x) > 0.0001, TRUE)
physeq2
physeq3 = transform_sample_counts(physeq2, function(x) x / sum(x) )
physeq3
df <- psmelt(physeq3)
glom <- tax_glom(physeq3, taxrank = 'Family')
glom # 
data <- psmelt(glom) # create dataframe from phyloseq object
data$Family <- as.character(data$Family) #convert to character
data$julian <- as.numeric(data$julian)
#Then turn it back into a factor with the levels in the correct order
#data$julian <- factor(data$julian, levels=unique(data$julian))
View(data)
#datat <- data
data <- data[order(data$julian),] 
#simple way to rename phyla with < 1% abundance
data$Family[data$Abundance < 0.005] <- "< 1% abund."
h <- ggplot(subset(data, Abundance > 0.01), 
            aes(x = reorder(GroupID,julian), y=Abundance, fill=Family))
h + geom_bar(aes(), stat="identity", position="fill") + facet_wrap("fraction", scales = "free")+
  scale_fill_manual(values = c( "peru","ivory4", "lightpink2", "darkgoldenrod1", 
                                "palevioletred1", "dodgerblue", "plum", "brown3",
                                "darkblue", "lightskyblue", "thistle3" , "lightblue4", 
                                 "tomato4", "darkorange1", 
                                  "khaki2", 
                                "goldenrod","lightpink",
                                "khaki3", "palegreen1",  "skyblue4", 
                                "skyblue","lightsalmon", "slateblue1", "yellow4", 
                               "royalblue4", "turquoise", 
                               "darkseagreen", "darkorchid",  "steelblue4", 
                               "gold",  "black",  "darkgreen", 
                               "blue3",  "sienna3","steelblue2",   "red1" ,
                               "darkgrey","tan4",
                               "red", "wheat3", "purple3" , "slateblue4", 
                                "deeppink4", "aquamarine3", "deeppink","yellowgreen", 
                               "goldenrod1",
                               "gold3",  "steelblue1",
                                "darksalmon"
                               )) +
  guides(fill = guide_legend(keywidth = 0.3, , keyheight =.70, ncol=1)) +
  theme_classic()+
  theme(legend.text =element_text(size=6)) +
  theme(legend.title =element_text(size=7)) +
  theme(axis.title.x = element_text(size = 8)) +
  theme(axis.title.y = element_text(size = 8)) +
  theme(axis.text.x = element_text(size =6, angle = 90)) +
  theme(axis.text.y = element_text(size =6)) +
  theme(strip.text.x = element_text(size =5)) +
  ylab("Relative abundance")



